<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCABRAFEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiivNvid8Th4ZDaTo7I+qsuZJCARbAjjjux6gHp1NAHTeKvH
        mieEI8ajc7rlhlLWH5pW98fwj3OO+M15Jrfxz1y9dl0i3t9Oi/hYjzpPzYbf/Ha83uLma7uJJ7mWSaaR
        izySMWZie5J6mo6AOgufHvim7ctLr+ogntHO0Y/JcCo4PG/ia3YNHr+p8dmunYfkTisOigD0LR/jX4l0
        91F+bfUYu4ljCPj2ZcfqDXq3hL4oaH4rdLdZDZX7cC2nIG8/7DdG+nB9q+Z6ASCCDgigD7Korxv4YfFa
        SWaHRPEc5dnwlteSHnPZHPfPZvz9a9koASiiigDnfHfipPCHhe4v/la5b91bIf4pD0z7DBJ+mK+XLm4l
        u7mW4uJGlmlcvI7HJZickk/WvSfjnrbXviqDSkb91YQgsv8A00fDH/x3Z+teZUAFFFdF8P8ATotV8eaP
        azgNE1wHZT0YKC2D9duKAO+8F/BOO80+K/8AEs08TTKHS0hIUqD03kg8n+6MY7nsNLxH8C9Olsnl8PXM
        8F2oysM7h45PbOMqffke1esUUAfHNzbTWdzLb3MbRTQuUkRhgqwOCD+NR16D8bdPisfHvmxAA3lrHO4H
        97LJ/wCyCvPqACvoz4SeMn8TeHWtL2TfqGn4R2Y8yR/wsfU8EH6A96+c6634X642h+PNPfcRDdP9llHq
        rkAfk20/hQB9OUVD9ttf+fhP++qKAPlzx9dNd+Pdckc5IvJIwfZTtH6Cufrc8cQG38c64jDH+nTMB7Fy
        R+hrDoAK0vDmrtoHiKw1NVLfZZlkZR1Zc/MPxGRWbT4IJbmZYoInllbhURSxP0AoA+v7G9t9SsYbyzmW
        a3nQPG6nhganZgilmYBQMkk4AFfPXhCH4j+H4ymj6bfrbMdxt7mHEZPqA+MfUYzV3xTP8T9csXtr7TLq
        K0cfPDZQjD/XaSxHtnHtQBzPxL8SReJ/Gl1dWr77SFRbwN/eVc5P0LFiPYiuUqe7sbrT5jDe201vKOqT
        RlG/I1BQAU6GV4JkljOHRgyn0I5FNoVSzBVGSTgAUAdR/wAJze/33/OiqH/CL339w/lRQB1Xxs0dtP8A
        HBvQv7rUIVkBxxuUbGH6A/8AAq88r6Y+J/hJvFfhWRbaPdf2ZM1uB1bj5k/EfqBXzOQQSCMEdqAOx+G/
        gX/hNdYlW4kaKwtArTsn3mJztUemcHn2r6I0bQNL8P2ot9JsYbWPGD5a/M3+83Vj7k180+D/AB1qngqe
        d9NEEkdwF82KdCVbGcHgggjJ7967y3/aAnVR9p0CKRu5juig/IqaAPa6K8c/4aCT/oXG/wDA3/7XR/w0
        En/Qut/4G/8A2FAHrOoabZarbNbahaQ3ULdUmQMP1714P8U/hvB4VEeqaQWGnTSeW8LNuMLkEjBPJU4P
        XkY6nNbUv7QLlSIfDyq3q94WH5BBXG+MPibrHjGzWyuo7a2tFcSeXApyxHTcSTnGT0xQBx9dH8PtHbXP
        HGl2u3MazCaXjjYnzHP1xj8a5yvefgn4RbS9Il128j23N+oWAEcrD1z/AMCOD9AD3oA9A/sHTf8An3X8
        qK0KKAFrxv4q/DCSWabX9AgLl8vd2yDnPeRR3z3H4+teyUUAfGtFfRnjL4SaT4mkkvLJv7O1BzuZ40zH
        IfVk459xjrk5ryDW/hf4o0N28zTXu4h0ms8yqfwHzD8QKAOSop0sMkEhjmjaNx1VgQR+FNVSzBVBJPQC
        gAoro9H+H3ibXHX7JpFysZ/5azr5SY9ctjP4Zr1bwj8E7DS5I7vxBKmoXC8i3UYgU++eX/HA9QaAON+G
        Xwym8RXMWq6xE0ekRnciMMG6PoP9j1PfoO5H0EqhFCqAFAwABwBQqqihVACgYAHQCloASiiigBaKKKAC
        k/ioooAy9e/49xVfw93+lFFAG6etFFFABRRRQAlFFFAH/9k=
</value>
  </data>
</root>